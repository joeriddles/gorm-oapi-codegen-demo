// Code generated by github.com/joeriddles/gorm-oapi-codegen DO NOT EDIT.
package api

import (
  "context"

  "github.com/joeriddles/gorm-oapi-codegen-demo/repository"
)

type VehicleController interface {
  GetVehicle(ctx context.Context, request GetVehicleRequestObject) (GetVehicleResponseObject, error)
  PostVehicle(ctx context.Context, request PostVehicleRequestObject) (PostVehicleResponseObject, error)
  DeleteVehicleId(ctx context.Context, request DeleteVehicleIdRequestObject) (DeleteVehicleIdResponseObject, error)
  GetVehicleId(ctx context.Context, request GetVehicleIdRequestObject) (GetVehicleIdResponseObject, error)
  PutVehicleId(ctx context.Context, request PutVehicleIdRequestObject) (PutVehicleIdResponseObject, error)
}

type _VehicleController struct {
  repository repository.VehicleRepository
  mapper VehicleMapper
}

func NewVehicleController() VehicleController {
  return &_VehicleController{
    repository: repository.NewVehicleRepository(),
    mapper: NewVehicleMapper(),
  }
}

func (c *_VehicleController) GetVehicle(ctx context.Context, request GetVehicleRequestObject) (GetVehicleResponseObject, error) {
  vehicles, err := c.repository.List(ctx, map[string]interface{}{})
  if err != nil {
    return nil, err
  }

  result := []Vehicle{}
  for _, vehicle := range vehicles {
    apiVehicle, err := c.mapper.MapToApi(*vehicle)
    if err != nil {
      return nil, err
    }
    result = append(result, *apiVehicle)
  }

  return GetVehicle200JSONResponse(result), nil
}

func (c *_VehicleController) PostVehicle(ctx context.Context, request PostVehicleRequestObject) (PostVehicleResponseObject, error) {
  model, err := c.mapper.MapCreate(*request.Body)
  if err != nil {
    return nil, err
  }
  if err = c.repository.Create(ctx, *model); err != nil {
    return nil, err
  }
  apiModel, err := c.mapper.MapToApi(*model)
  if err != nil {
    return nil, err
  }
  return PostVehicle201JSONResponse(*apiModel), nil
}

func (c *_VehicleController) DeleteVehicleId(ctx context.Context, request DeleteVehicleIdRequestObject) (DeleteVehicleIdResponseObject, error) {
  if err := c.repository.Delete(ctx, request.Id); err != nil {
    return nil, err
  }
  return DeleteVehicleId204Response{}, nil
}

func (c *_VehicleController) GetVehicleId(ctx context.Context, request GetVehicleIdRequestObject) (GetVehicleIdResponseObject, error) {
  model, err := c.repository.Get(ctx, request.Id)
  apiModel, err := c.mapper.MapToApi(*model)
  if err != nil {
    return nil, err
  }
  return GetVehicleId200JSONResponse(*apiModel), err
}

func (c *_VehicleController) PutVehicleId(ctx context.Context, request PutVehicleIdRequestObject) (PutVehicleIdResponseObject, error) {
  update, err := c.mapper.MapUpdate(*request.Body)
  if err != nil {
    return nil, err
  }
  if err := c.repository.Update(ctx, update); err != nil {
    return nil, err
  }
  return nil, nil
}
